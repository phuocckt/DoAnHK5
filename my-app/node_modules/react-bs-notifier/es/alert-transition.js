function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
import React from "react";
import transitionStyles from "./transition-styles";
import { CSSTransition } from "react-transition-group";
import { ENTER_TIMEOUT, EXIT_TIMEOUT } from "./container";
import { createUseStyles } from "react-jss";
const AlertTransition = props => {
  const classes = useStyles();
  const timeout = {
    enter: ENTER_TIMEOUT,
    exit: EXIT_TIMEOUT
  };
  return /*#__PURE__*/React.createElement(CSSTransition, _extends({
    timeout: timeout,
    classNames: classes
  }, props));
};
const useStyles = createUseStyles(transitionStyles);
export default AlertTransition;